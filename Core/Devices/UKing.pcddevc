<?xml version="1.0" encoding="ISO-8859-1"?>
<device image="64 x 64\genioby5.png">
 <information id="PC_DIMMER">
 <name>Moving Head Light</name>
 <vendor>UKing</vendor>
 <author>Dr. Christian Nöding</author>
 <description>Moving-Head mit 13-Kanälen</description>
 </information>
 <channels>
  <function channel="0" minvalue="0" maxvalue="255" name="Pan" fade="yes" type="pan"/>
  <function channel="1" minvalue="0" maxvalue="255" name="PanFine" fade="yes" type="panfine"/>
  <function channel="2" minvalue="0" maxvalue="255" name="Tilt" fade="yes" type="tilt"/>
  <function channel="3" minvalue="0" maxvalue="255" name="TiltFine" fade="yes" type="tiltfine"/>
  <function channel="4" minvalue="0" maxvalue="255" name="Speed" fade="yes" type="speed"/>
  <function channel="5" minvalue="0" maxvalue="255" name="DIMMER" fade="yes" type="dimmer"/>
  <function channel="6" minvalue="0" maxvalue="255" name="Shutter" fade="yes" type="shutter"/>
  <function channel="7" minvalue="0" maxvalue="255" name="Rot" fade="yes" type="r"/>
  <function channel="8" minvalue="0" maxvalue="255" name="Grün" fade="yes" type="g"/>
  <function channel="9" minvalue="0" maxvalue="255" name="Blau" fade="yes" type="b"/>
  <function channel="10" minvalue="0" maxvalue="255" name="Weiß" fade="yes" type="w"/>
  <function channel="11" minvalue="0" maxvalue="255" name="SelfPropelled" fade="yes" type="special1"/>
  <function channel="12" minvalue="0" maxvalue="255" name="Reset" fade="yes" type="special2"/>
 </channels>
 <amber UseAmberMixing="yes" AmberMixingCompensateRG="yes" AmberMixingCompensateBlue="yes" AmberColorR="255"AmberColorG="191" />
 <initvalues ch0="128" ch1="128" ch2="128" ch3="128" ch4="0" ch5="-1" ch6="-1" ch7="-1" ch8="-1" ch9="-1" ch10="-1" ch11="0" ch12="0" />
 <shutter OpenValue="255" CloseValue="0" ChannelName="shutter"/>
 <strobe OffValue="0" MinValue="0" MaxValue="255" ChannelName="shutter"/>
 <dimmer OffValue="0" MaxValue="255"/>
 <fog OffValue="0" MaxValue="255"/>
 <gobo1rot LeftMinValue="0" LeftMaxValue="0" OffValue="128" RightMinValue="255" RightMaxValue="255" ChannelName="gobo1rot"/>
 <gobo2rot LeftMinValue="0" LeftMaxValue="0" OffValue="128" RightMinValue="255" RightMaxValue="255" ChannelName="gobo2rot"/>
 <prismarot LeftMinValue="0" LeftMaxValue="0" OffValue="128" RightMinValue="255" RightMaxValue="255" ChannelName="prismarot"/>
 <prisma SingleValue="0" TripleValue="0"/>
 <iris OpenValue="255" CloseValue="0" MinValue="0" MaxValue="255"/>
 <form width="470" height="424">
  <deviceimage top="8" left="8" width="64" height="64"/>
  <devicename top="24" left="80"/>
  <deviceadress top="8" left="80"/>
  <devicedipswitch top="40" left="80"/>
  <colorpicker top="242" left="233" />
  <position top="8" left="233" height="226" width="226" />
  <slider name="PANFINEslider1" top="96" left="8" width="217" height="17" action="PANFINEchange" startvalue="0" endvalue="255" default="128"/>
  <slider name="TILTFINEslider3" top="136" left="8" width="217" height="17" action="TILTFINEchange" startvalue="0" endvalue="255" default="128"/>
  <slider name="SPEEDslider4" top="176" left="8" width="217" height="17" action="SPEEDchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="DIMMERslider5" top="216" left="8" width="217" height="17" action="DIMMERchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="SHUTTERslider6" top="256" left="8" width="217" height="17" action="SHUTTERchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="Wslider10" top="296" left="8" width="217" height="17" action="Wchange" startvalue="0" endvalue="255" default="0"/>
  <slider name="SPECIAL1slider11" top="336" left="8" width="217" height="17" action="SPECIAL1change" startvalue="0" endvalue="255" default="0"/>
  <label name="PANFINElbl1" top="80" left="8" width="39" height="13" caption="PanFine"/>
  <label name="TILTFINElbl3" top="120" left="8" width="34" height="13" caption="TiltFine"/>
  <label name="SPEEDlbl4" top="160" left="8" width="31" height="13" caption="Speed"/>
  <label name="DIMMERlbl5" top="200" left="8" width="44" height="13" caption="DIMMER"/>
  <label name="SHUTTERlbl6" top="240" left="8" width="34" height="13" caption="Shutter"/>
  <label name="Wlbl10" top="280" left="8" width="25" height="13" caption="Weiß"/>
  <label name="SPECIAL1lbl11" top="320" left="8" width="50" height="13" caption="Automatik:"/>
  <button name="SwitchColorPickerBtn" top="379" left="234" width="150" height="25" action="SwitchColorPicker" caption="Andere Farbauswahl"/>
  <button name="Button2_6" top="370" left="10" width="80" height="30" action="SPECIAL2change" caption="Reset"/>
 </form>
 <code>
  unit NewDeviceUnit;

  interface

  procedure InitDevice(Device: String);
  procedure FormShow;
  procedure FormRefresh(channel:Integer);
  procedure FormClose;
  procedure PositionXYChange(Top, Left: Integer);
  procedure PANFINEchange;
  procedure TILTFINEchange;
  procedure SPEEDchange;
  procedure DIMMERchange;
  procedure SHUTTERchange;
  procedure ColorPickerChange(R, G, B: Byte);
  procedure SwitchColorPicker;
  procedure Wchange;
  procedure SPECIAL1change;
  procedure SPECIAL2change;

  implementation

  var
   DontRefresh:boolean;

  procedure InitDevice(Device: String);
  begin
  end;
  procedure FormShow;
  begin
  end;
  procedure FormRefresh(channel:Integer);
  var
    Value:integer;
    r,phi,temp:Double;
  begin
    if not DontRefresh then
    case channel of
      0:
      begin
        if usemhcontrol.checked then
        begin
          // Moving-Head-Steuerung
          temp:=get_channel('tilt')+(get_channel('tiltfine')/256);
          case round(temp) of
            0..127: r:=((127-temp)/127);
            128..255: r:=((temp-128)/127);
          end;
          phi:=(get_channel('pan')+(get_channel('panfine')/256))/255*6.283185307179586476925286766559;	//(X/255)*PI
          PositionXY.Left:=round(r*sin(phi)*(Fadenkreuz.Width/2)+(Fadenkreuz.Width/2)-(PositionXY.Width div 2));
          PositionXY.Top:=round(r*cos(phi)*(Fadenkreuz.Height/2)+(Fadenkreuz.Height/2)-(PositionXY.Width div 2));
        end else
        begin
          // Scanner-Steuerung
          PositionXY.Left:=round(Fadenkreuz.Width * (get_channel('pan')+get_channel('panfine')/256)/255)-(PositionXY.Width div 2);
          PositionXY.Top:=round(Fadenkreuz.Height * (get_channel('tilt')+get_channel('tiltfine')/256)/255)-(PositionXY.Height div 2);
        end;
      end;
      1:
      begin
        PANFINEslider1.position:=get_channel('PANFINE');
      end;
      2:
      begin
        if usemhcontrol.checked then
        begin
          // Moving-Head-Steuerung
          temp:=get_channel('tilt')+(get_channel('tiltfine')/256);
          case round(temp) of
            0..127: r:=((127-temp)/127);
            128..255: r:=((temp-128)/127);
          end;
          phi:=(get_channel('pan')+(get_channel('panfine')/256))/255*6.283185307179586476925286766559;	//(X/255)*PI
          PositionXY.Left:=round(r*sin(phi)*(Fadenkreuz.Width/2)+(Fadenkreuz.Width/2)-(PositionXY.Width div 2));
          PositionXY.Top:=round(r*cos(phi)*(Fadenkreuz.Height/2)+(Fadenkreuz.Height/2)-(PositionXY.Width div 2));
        end else
        begin
          // Scanner-Steuerung
          PositionXY.Left:=round(Fadenkreuz.Width * (get_channel('pan')+get_channel('panfine')/256)/255)-(PositionXY.Width div 2);
          PositionXY.Top:=round(Fadenkreuz.Height * (get_channel('tilt')+get_channel('tiltfine')/256)/255)-(PositionXY.Height div 2);
        end;
      end;
      3:
      begin
        TILTFINEslider3.position:=get_channel('TILTFINE');
      end;
      4:
      begin
        SPEEDslider4.position:=get_channel('SPEED');
      end;
      5:
      begin
        DIMMERslider5.position:=get_channel('DIMMER');
      end;
      6:
      begin
        SHUTTERslider6.position:=get_channel('SHUTTER');
      end;
      7:
      begin
        // RGB-Änderungen werden derzeit nicht im DDF angezeigt
      end;
      8:
      begin
        // RGB-Änderungen werden derzeit nicht im DDF angezeigt
      end;
      9:
      begin
        // RGB-Änderungen werden derzeit nicht im DDF angezeigt
      end;
      10:
      begin
        Wslider10.position:=get_channel('W');
      end;
      11:
      begin
        SPECIAL1slider11.position:=get_channel('SPECIAL1');
      end;
    end;
    DontRefresh:=false;
  end;
  procedure FormClose;
  begin
  end;
  procedure PositionXYChange(Top, Left: Integer);
  var
	phi,r,x,y:Double;
	pan, tilt, panfine, tiltfine:Double;
  begin
	if usemhcontrol.checked then
	begin
		// Moving-Head-Steuerung (Polarkoordinaten)
		x:=((PositionXY.Left+(PositionXY.Width div 2)-(fadenkreuz.Width/2))/fadenkreuz.Width)*2;	//-1..0..1
		y:=((PositionXY.Top+(PositionXY.Height div 2)-(fadenkreuz.Width/2))/fadenkreuz.Height)*2;	//-1..0..1
		r:=sqrt(x*x+y*y);
	
		if (r>0) then
		begin
			if (y>=0) then
				phi:=arccos(x/r)
			else
				phi:=6.283185307179586476925286766559-arccos(x/r);
		end else
			phi:=64;
		
		r:=128-((r/2)*255);
		phi:=(phi/6.283185307179586476925286766559)*255;
		if 64>=phi then
			phi:=phi+191
		else
			phi:=phi-64;
	
		pan:=255-phi;
		tilt:=255-r;
	end else
	begin
		// Scannersteuerung (Kartesische Koordinaten)
		pan:=((PositionXY.Left+(PositionXY.Width div 2))/fadenkreuz.Width)*255;
		tilt:=((PositionXY.Top+(PositionXY.Height div 2))/fadenkreuz.Height)*255;
	end;

	// Ausgabe
	if panmirror.checked then
	begin
		dontrefresh:=true;
		set_channel('pan',trunc(255-pan),trunc(255-pan),0);
		dontrefresh:=true;
		set_channel('panfine',trunc(frac(255-pan)*255),trunc(frac(255-pan)*255),0);
	end	else
	begin
		dontrefresh:=true;
		set_channel('pan',trunc(pan),trunc(pan),0);
		dontrefresh:=true;
		set_channel('panfine',trunc(frac(pan)*255),trunc(frac(pan)*255),0);
	end;
	if tiltmirror.checked then
	begin
		dontrefresh:=true;
		set_channel('tilt',trunc(255-tilt),trunc(255-tilt),0);
		dontrefresh:=true;
		set_channel('tiltfine',trunc(frac(255-tilt)*255),trunc(frac(255-tilt)*255),0);
	end	else
	begin
		dontrefresh:=true;
		set_channel('tilt',trunc(tilt),trunc(tilt),0);
		dontrefresh:=true;
		set_channel('tiltfine',trunc(frac(tilt)*255),trunc(frac(tilt)*255),0);
	end;
  end;
  procedure PANFINEchange;
  begin
    DontRefresh:=true;

    set_channel('PANFINE',-1,PANFINEslider1.position,0);
  end;
  procedure TILTFINEchange;
  begin
    DontRefresh:=true;

    set_channel('TILTFINE',-1,TILTFINEslider3.position,0);
  end;
  procedure SPEEDchange;
  begin
    DontRefresh:=true;

    set_channel('SPEED',-1,SPEEDslider4.position,0);
  end;
  procedure DIMMERchange;
  begin
    DontRefresh:=true;

    set_channel('DIMMER',-1,DIMMERslider5.position,0);
  end;
  procedure SHUTTERchange;
  begin
    DontRefresh:=true;

    set_channel('SHUTTER',-1,SHUTTERslider6.position,0);
  end;
  procedure ColorPickerChange(R, G, B: Byte);
  begin
    set_channel('r',-1,r,0);
    set_channel('g',-1,g,0);
    set_channel('b',-1,b,0);
    set_channel('c',-1,255-r,0);
    set_channel('m',-1,255-g,0);
    set_channel('y',-1,255-b,0);
  end;
  procedure SwitchColorPicker;
  begin
    if colorpicker.visible then
    begin
      colorpicker.visible:=false;
      colorpicker2.visible:=true;
    end else
    begin
      colorpicker.visible:=true;
      colorpicker2.visible:=false;
    end;
  end;
  procedure Wchange;
  begin
    DontRefresh:=true;

    set_channel('W',-1,Wslider10.position,0);
  end;
  procedure SPECIAL1change;
  begin
    DontRefresh:=true;

    set_channel('SPECIAL1',-1,SPECIAL1slider11.position,0);
  end;
  procedure SPECIAL2change;
  begin
    set_channel('special2', 255, 255, 0);
    ShowMessage('Klicken Sie auf OK, wenn der Reset ausgeführt wird...');
		set_channel('special2', 0, 0, 0);
  end;
  end.
 </code>
</device>
